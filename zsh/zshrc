# -------------------
# | 1. 初始设置
# -------------------
# 取消ctrl+q/ctrl+s的锁定终端
stty -ixon
# 终端使用emacs的按键
bindkey -e

# 自定义的环境变量
export F2TM_project_path="$HOME/Fly2TheMoon"
# 系统级环境变量
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# 命令检查
which git > /dev/null 2>&1
F2TM_git_exist=$?
which tmux > /dev/null 2>&1
F2TM_tmux_exist=$?
which docker > /dev/null 2>&1
F2TM_docke_exist=$?
which rsync > /dev/null 2>&1
F2TM_rsync_exist=$?



# ---------------
# | 2. 自己的配置
# ---------------
# 设置路径
if [ -d /usr/local/man ]; then
    export MANPATH="/usr/local/man:$MANPATH"
fi

# 默认编辑器
if which vim > /dev/null 2>&1; then
    export EDITOR=vim
    alias vi="vim"
fi

# 快速编辑配置文件
alias zshrc="vim ~/.zshrc"
alias tmuxrc="vim ~/.tmux.conf"
alias vimrc="vim -O ~/.vim/scripts/plugin.vim ~/.vim/scripts/setting.vim"

# 代理
if ps aux | grep -v grep | grep privoxy > /dev/null 2>&1; then
    proxy_addr="http://127.0.0.1:8118"
else
    proxy_addr="http://192.168.2.106:8118"
fi
alias h="http_proxy=${proxy_addr} https_proxy=${proxy_addr} HTTP_PROXY=${proxy_addr} HTTPS_PROXY=${proxy_addr}"

# 快速登录
F2TM_tmux_command="tmux new-session -s `whoami` || tmux attach-session -t `whoami`"
alias mars="$F2TM_tmux_command"
alias fsshme="ssh hoh0@192.168.2.106 -t \"$F2TM_tmux_command\""
alias fsshlth="ssh lth@192.168.2.20"
alias fssh105="ssh root@192.168.2.105 -t \"$F2TM_tmux_command\""
alias fssh146="ssh root@202.107.247.146 -p 28489 -t \"$F2TM_tmux_command\""
alias fsshmaster="ssh root@192.168.2.154 -t \"$F2TM_tmux_command\""
alias fsshfirefly="ssh root@192.168.2.150 -t \"$F2TM_tmux_command\""
alias fsshfireflydesktop="ssh root@192.168.2.151 -t \"$F2TM_tmux_command\""

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if [ ! -d $PYENV_ROOT ]; then
	https_proxy=$proxy_addr git clone https://github.com/yyuu/pyenv.git $PYENV_ROOT
fi
if [ ! -d $PYENV_ROOT/plugins/pyenv-virtualenv ]; then
	https_proxy=$proxy_addr git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv
fi
eval "$(pyenv init - zsh)"
eval "$(pyenv virtualenv-init - zsh)"

# docker
if [ $F2TM_docke_exist ]; then
    alias dps='docker ps --format '\''table {{.Names}}\t{{.ID}}\t{{.Status}}\t{{.Image}}'\'''
    alias dim="docker images"
    alias drm="docker rm"
    alias drmi="docker rmi"
fi

# gr, 多repo的git管理工具
# zsh plugin git中的别名gr='git remove'，所以git-run重新别名
if ! which ggr > /dev/null 2>&1 && [ -x /usr/bin/gr ]; then
    alias ggr="/usr/bin/gr"
    . <(ggr completion)
fi

# trash-cli，rm升级版
if which trash-put > /dev/null 2>&1; then
    alias rm="trash-put"
fi

# htop，top升级版
if which htop > /dev/null 2>&1; then
    alias top="htop"
fi

# ccat，cat升级版
if which ccat > /dev/null 2>&1; then
    alias cat="ccat"
fi

# VirtualBox
if which vboxmanage > /dev/null 2>&1; then
    alias vb="vboxmanage"
fi

#可视化cp命令
if [ $F2TM_rsync_exist ]; then
    alias cp="cpv"
fi

# 彩色ls
base_ls='ls -h --color=auto --ignore="*\.pyc" --ignore="*\.pyo"'
alias ll="$base_ls -l"
alias la="$base_ls -al"

# 不同的OS不同的配置
if [[ $OSTYPE == darwin* ]]; then
    if [ -d /usr/local/opt/coreutils ]; then
        export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
        export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
    fi
fi



# ---------
# | 3. 插件
# ---------
export ZPLUG_HOME="$HOME/.zplug"
if [[ ! -d $ZPLUG_HOME ]]; then
    https_proxy=$proxy_addr git clone https://github.com/zplug/zplug $ZPLUG_HOME
fi
source $ZPLUG_HOME/init.zsh

# zsh-users
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-history-substring-search", defer:3
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
# oh-my-zsh，通用
zplug "plugins/sudo", from:oh-my-zsh
zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "plugins/extract", from:oh-my-zsh
zplug "plugins/z", from:oh-my-zsh
# oh-my-zsh，命令相关
zplug "plugins/cp", from:oh-my-zsh, if:"which rsync > /dev/null 2>&1"
zplug "plugins/tmux", from:oh-my-zsh, if:"[ $F2TM_tmux_exist ]"
zplug "plugins/gitfast", from:oh-my-zsh, if:"[ $F2TM_git_exist ]"
zplug "plugins/git-extras", from:oh-my-zsh, if:"[ $F2TM_git_exist ]"
zplug "plugins/gitignore", from:oh-my-zsh, if:"[ $F2TM_git_exist ]"
zplug "plugins/docker", from:oh-my-zsh, if:"[ $F2TM_docke_exist ]"
zplug "plugins/docker-compose", from:oh-my-zsh, if:"which docker-compose > /dev/null 2>&1"
zplug "plugins/python", from:oh-my-zsh, if:"which python > /dev/null 2>&1"
zplug "plugins/httpie", from:oh-my-zsh, if:"which http > /dev/null 2>&1"
# oh-my-zsh，平台相关
zplug "plugins/osx", from:oh-my-zsh, if:"[[ $OSTYPE == darwin* ]]"
zplug "plugins/brew", from:oh-my-zsh, if:"[[ $OSTYPE == darwin* ]] && which brew > /dev/null 2>&1"
zplug "plugins/dnf", from:oh-my-zsh, if:"[[ $OSTYPE == linux-gnu ]] && which dnf > /dev/null 2>&1"
zplug "plugins/systemd", from:oh-my-zsh, if:"[[ $OSTYPE == linux-gnu ]] && which systemctl > /dev/null 2>&1"
zplug "plugins/archlinux", from:oh-my-zsh, if:"[[ $OSTYPE == linux-gnu ]] && which pacman > /dev/null 2>&1"
# oh-my-zsh，主题
zplug "lib/theme-and-appearance", from:oh-my-zsh
zplug "themes/afowler", from:oh-my-zsh, as:theme
# zplug
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; https_proxy=$proxy_addr zplug install
    fi
fi
# Then, source plugins and add commands to $PATH
zplug load
